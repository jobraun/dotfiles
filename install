#!/bin/bash

BASHALIASES=.bash_aliases
GITCONFIG=.gitconfig
VIMCONFIG=.vimrc
VIMFILES=.vim
EMACSCONFIG=.emacs
EMACSFILES=.emacs.d
ERROR=false
FORCE=false

function create_links() {
    unlink $HOME/$BASHALIASES
    unlink $HOME/$GITCONFIG
    unlink $HOME/$EMACSCONFIG
    unlink $HOME/$EMACSFILES
    unlink $HOME/$VIMCONFIG
    unlink $HOME/$VIMFILES
    ln -sf $PWD/$BASHALIASES $HOME/$BASHALIASES
    ln -sf $PWD/$GITCONFIG $HOME/$GITCONFIG
    ln -sf $PWD/$EMACSCONFIG $HOME/$EMACSCONFIG
    ln -sf $PWD/$EMACSFILES $HOME/$EMACSFILES
    ln -sf $PWD/$VIMCONFIG $HOME/$VIMCONFIG
    ln -sf $PWD/$VIMFILES $HOME/$VIMFILES
    echo "Created symbolic links for config files in $HOME"
}

if [ "$1" == "-f" ]; then
    FORCE=true
    read -p "Force parameter used. Overwrite existing files (y/n)? " answer
    case ${answer:0:1} in
        y|Y )
            create_links
            exit 0
            ;;
        * )
            exit 1
            ;;
    esac
fi

if [ -z "$HOME" ]; then
    echo "ERROR: variable HOME not set."
    exit 1
fi

if [ -e "$HOME/$BASHALIASES" ]; then
    echo "$BASHALIASES already exists."
    ERROR=true
fi

if [ -e "$HOME/$GITCONFIG" ]; then
    echo "$GITCONFIG already exists."
    ERROR=true
fi

if [ -e "$HOME/$EMACSCONFIG" ]; then
    echo "$EMACSCONFIG already exists."
    ERROR=true
fi

if [ -e "$HOME/$EMACSFILES" ]; then
    echo "$EMACSFILES already exists."
    ERROR=true
fi

if [ -e "$HOME/$VIMCONFIG" ]; then
    echo "$VIMCONFIG already exists."
    ERROR=true
fi

if [ -e "$HOME/$VIMFILES" ]; then
    echo "$VIMFILES already exists."
    ERROR=true
fi

[ "$ERROR" = "true" ] && exit 1

create_links
