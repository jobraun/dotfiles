run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
  sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

##################################
## Common settings
##################################

# default shell
set-option -g default-command /bin/bash
set-option -g default-shell /bin/bash

set -g set-titles on
set -g set-titles-string "#T"
set -g base-index 1

# Set display timelimit
set-option -g display-panes-time 2000
set-option -g display-time 1000

# Enable 256 color terminal
# http://blog.sanctum.geek.nz/256-colour-terminals/
set -g default-terminal "screen-256color"

# History size
set -g history-limit 100000

# Enable shell hotkeys C-left/C-right
# http://sigizmund.com/tmux-and-c-leftc-right/
set-window-option -g xterm-keys on

# Use vi mode
setw -g mode-keys vi
set -g status-keys vi


##################################
## Key bindings
##################################

# Bind to reload config
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# Remap command key binding to Ctrl-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
  bind-key -t vi-copy 'v' begin-selection; \
  bind-key -t vi-copy 'C-v' rectangle-toggle; \
  bind-key -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' " \
  bind-key -T copy-mode-vi 'v' send -X begin-selection; \
  bind-key -T copy-mode-vi 'r' send -X rectangle-toggle; \
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
    bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
    bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
    bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
    bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
    bind-key -T copy-mode-vi C-h select-pane -L
    bind-key -T copy-mode-vi C-j select-pane -D
    bind-key -T copy-mode-vi C-k select-pane -U
    bind-key -T copy-mode-vi C-l select-pane -R
    bind-key -T copy-mode-vi C-\ select-pane -l

# Scroll via page up and page down
bind-key -T root PPage if-shell -F "#{alternate_on}" "send-keys PPage" "copy-mode -e; send-keys PP    age"

# Monitor changes on non-focus window (activity symbol = #)
# (e.g 1:zsh  2:zsh  3:torr# 4:im- 5:chat# 6:fm# 7:conf*)
set-window-option -g monitor-activity on

# Displays a message at the bottom when activity is detected (e.g Activity in Window 5)
# requires: monitor-activity on
set-option -g visual-activity on

# Bell colors (bell symbol = !)
# to simulate a bell alert use: sleep 3 && echo -e "\a"
set-window-option -g window-status-bell-style 'fg=black,bg=colour5,bright'
